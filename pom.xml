<?xml version="1.0" encoding="UTF-8"?>
<!--project 表示根标签-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<!--   在maven2中固定为4.0.0-->
    <modelVersion>4.0.0</modelVersion>

<!--    显示坐标,表示该pom文件-->
<!--    公司域名加项目名-->
<!--    子工程在和父工程的依赖groupID和version相同时,可以省略不写-->
    <groupId>com.rong</groupId>
<!--    工程名-->
    <artifactId>CloudRong</artifactId>
    <version>1.0-SNAPSHOT</version>
<!--    所包含的子项目,modules,项目的聚合-->

    <modules>
        <module>cloud-provider-payment8001</module>
        <module>webtest</module>
        <module>cloud-consumer-order80</module>
        <module>cloud-api-commons</module>
    </modules>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
    </dependencies>

    <!--    pom表示这是一个总的父工程,项目的打包方式,jar为Java工程,war为web工程-->
    <packaging>pom</packaging>
<!--对pom文件的配置-->
    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
<!--        编译文件时使用的编码字符集-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven.compiler.source>1.8</maven.compiler.source>

        <maven.compiler.target>1.8</maven.compiler.target>

        <junit.version>4.12</junit.version>

        <log4j.version>1.2.17</log4j.version>

        <lombok.version>1.18.6</lombok.version>

        <mysql.version>5.1.47</mysql.version>

        <druid.version>1.1.16</druid.version>

        <mybatis.spring.boot.version>1.3.1</mybatis.spring.boot.version>
    </properties>

    <!-- 子模块继承之后，提供作用：锁定版本+子modlue不用写groupId和version  -->
    <!--    dependencyManagement 一般是在父工程中使用的,使用dependencyManagement能让所有的子项目引用一个依赖而不用显示的列出对应的版本号-->
    <!--    Maven会沿着父子层次向上走,直到找到一个拥有dependencyManagement元素的项目,然后就是使用它指定的版本号-->
    <!--    这样可以统一管理子项目的版本号-->
    <!--    dependencyManagement只是声明依赖,因此子项目还是需要引入依赖,只是不用声明版本号了-->
    <dependencyManagement>
        <dependencies>
            <!--spring boot 2.2.2-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.2.2.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--spring cloud Hoxton.SR1-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Hoxton.SR1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--spring cloud alibaba 2.1.0.RELEASE-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>2.1.0.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <optional>true</optional>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.3.10.RELEASE</version>
                <configuration>
                    <fork>true</fork>
                    <addResources>true</addResources>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>